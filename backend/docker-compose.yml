version: '3.8'

services:
  # Gateway API - Main entry point
  gateway:
    build:
      context: .
      dockerfile: src/Services/DSAGrind.Gateway.API/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - auth-api
      - problems-api
      - submissions-api
      - ai-api
      - search-api
      - admin-api
      - payments-api

  # Authentication API
  auth-api:
    build:
      context: .
      dockerfile: src/Services/DSAGrind.Auth.API/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - MongoDB__DatabaseName=dsagrind
      - Redis__ConnectionString=redis:6379
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - mongodb
      - redis
      - kafka

  # Problems API
  problems-api:
    build:
      context: .
      dockerfile: src/Services/DSAGrind.Problems.API/Dockerfile
    ports:
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - MongoDB__DatabaseName=dsagrind
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - mongodb
      - kafka

  # Submissions API
  submissions-api:
    build:
      context: .
      dockerfile: src/Services/DSAGrind.Submissions.API/Dockerfile
    ports:
      - "5002:5002"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - MongoDB__DatabaseName=dsagrind
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - mongodb
      - kafka
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # AI API
  ai-api:
    build:
      context: .
      dockerfile: src/Services/DSAGrind.AI.API/Dockerfile
    ports:
      - "5003:5003"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - OpenAI__ApiKey=${OPENAI_API_KEY}
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - kafka

  # Search API
  search-api:
    build:
      context: .
      dockerfile: src/Services/DSAGrind.Search.API/Dockerfile
    ports:
      - "5004:5004"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - MongoDB__DatabaseName=dsagrind
      - Qdrant__Host=qdrant
      - Qdrant__Port=6333
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - mongodb
      - qdrant
      - kafka

  # Admin API
  admin-api:
    build:
      context: .
      dockerfile: src/Services/DSAGrind.Admin.API/Dockerfile
    ports:
      - "5005:5005"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - MongoDB__DatabaseName=dsagrind
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - mongodb
      - kafka

  # Payments API
  payments-api:
    build:
      context: .
      dockerfile: src/Services/DSAGrind.Payments.API/Dockerfile
    ports:
      - "5006:5006"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDB__ConnectionString=mongodb://mongodb:27017
      - MongoDB__DatabaseName=dsagrind
      - Stripe__SecretKey=${STRIPE_SECRET_KEY}
      - Kafka__BootstrapServers=kafka:9092
    depends_on:
      - mongodb
      - kafka

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=dsagrind
    volumes:
      - mongodb_data:/data/db

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Apache Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

volumes:
  mongodb_data:
  redis_data:
  kafka_data:
  zookeeper_data:
  qdrant_data: